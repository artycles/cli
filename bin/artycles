#!/usr/local/bin/node

/**
 * Module dependencies.
 */

var program = require('commander'),
	main = require('../lib/main'),
	path = require('path'),
	fs = require('fs');

var exec;
// package info
var package = JSON.parse( fs.readFileSync( path.resolve( __dirname, '../package.json'), 'utf-8') ); // condition the existance of package.json?

program
	.version( package.version )
	.option('-c, --config <path>', 'Set config path. Defaults to ~/.artycles')
	.option('-r, --reset', 'Reset token saved');

/* Setup */
program
	.command('setup')
	.description('Setup credentials')
	.action(function(options){
		process.nextTick(function(){
			exec.setup(options )
		});
	});

/* User */
program
	.command('user [id]')
	.description('Read user info')
	.option("-f, --files", "List all files for user")
	.option("-s, --stores", "List all stores for user")
	.action(function(id, options){
		id = id || false;
		process.nextTick(function(){
			exec.user( id, options )
		});
	})
	.on('--help', function() {
		console.log('  Examples:');
		console.log();
		console.log('    $ user {{id}}');
		console.log('    $ user {{id}} --files');
		console.log('    $ user {{id}} --stores');
		console.log();
	});

/* File */
program
	.command('file [id]')
	.description('Read product details')
	.option("-a, --all", "List all files for user")
	.action(function(id, options){
		id = id || false;
		process.nextTick(function(){
			exec.file( id, options )
		});
	})
	.on('--help', function() {
		console.log('  Examples:');
		console.log();
		console.log('    $ file {{id}}');
		console.log('    $ file --all');
		console.log();
	});

/* Store */
program
	.command('store [id]')
	.description('Read store details')
	.option("-a, --all", "Read all stores")
	.option("-f, --files", "List all files for store")
	.option("-k, --keys <list>", "Return only certain fields")
	.option("-n, --number <number>", "Limit number of items returned")
	.option("-q, --query <string>", "Output items based on conditions")
	.option("-o, --order <field>", "Define the order of output based on a field")
	.action(function(id, options){
		id = id || false;
		process.nextTick(function(){
			exec.store( id, options )
		});
	})
	.on('--help', function() {
		console.log('  Examples:');
		console.log();
		console.log('    $ store {{id}}');
		console.log('    $ store {{id}} --all');
		console.log();
	});

program.parse(process.argv);

exec = main( program );
